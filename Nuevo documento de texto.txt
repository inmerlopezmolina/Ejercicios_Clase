class Solution
{

    // Complete the appendAndDelete function below.
    static string appendAndDelete(string s, string t, int k)
    {



        if (s.Equals(t))
        {
           
            return (k > s.Length * 2 || k % 2 == 0) ? "Yes" : "No";
        }

        else
        {
            int carecterescoinciden = 0;

            for (int i = 0; i < Math.Min(s.Length, t.Length); i++)
            {
                if (s[i] != t[i])
                {
                    break;
                }
                carecterescoinciden++;
            }

            int nonMatchingCharactersInS = s.Length - carecterescoinciden;
            int nonMatchingCharactersInT = t.Length - carecterescoinciden;

            int nmcS = nonMatchingCharactersInS;
            int nmcT = nonMatchingCharactersInT;

            bool condicionA = nmcS + nmcT == k;
            bool condicionB = (nmcS + nmcT < k && (nmcS + nmcT - k) % 2 == 0);
            bool condicionC = s.Length + t.Length <= k;

            return  (condicionA || condicionB || condicionC) ? "Yes" : "No";


        }

    }

    static void Main(string[] args)
    {
        //TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string s = Console.ReadLine();

        string t = Console.ReadLine();

        int k = Convert.ToInt32(Console.ReadLine());

        string result = appendAndDelete(s, t, k);

        //textWriter.WriteLine(result);

        Console.WriteLine(result);
        Console.ReadKey();
    }

    // textWriter.Flush();
    //textWriter.Close();
}